security:
    # Password hashers
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email  # Предположим, что вы используете email для входа

    firewalls:
        # Разрешаем доступ к страницам регистрации и входа
        public_area:
            pattern: ^/(register|login)$
            security: false

        # Защищенная область
        secured_area:
            pattern: ^/
            form_login:
                login_path: login
                check_path: login
            logout:
                path: /logout
            security: true

    # Контроль доступа
    access_control:
        # Страница входа доступна всем пользователям
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Страница регистрации доступна всем пользователям
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # Защищенные страницы для зарегистрированных пользователей
        - { path: ^/profile, roles: ROLE_USER }

# Конфигурация для тестовой среды
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Минимально возможное значение для bcrypt
                time_cost: 3 # Минимально возможное значение для argon
                memory_cost: 10 # Минимально возможное значение для argon
